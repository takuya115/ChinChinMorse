{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import morsify from \"morsify\";\n\n  let inputWord = \"\";\n  let outputWord = \"\";\n  let inputWordCount = 0;\n  let outputWordCount = 0;\n  const moresProps = {\n    priority: 10,\n    dash: \"ちんちん\",\n    dot: \"ちんこ\",\n    separator: \"ちんぽ\",\n  };\n  const mesugakiProps = {\n    priority: 10,\n    dash: \"ざぁこ\",\n    dot: \"♥\",\n    separator: \"♡\",\n  };\n\n  function encode() {\n    if (detectKanji()) return alert(\"漢字はつかえないよ！　めっ！！\");\n    const inputList = inputWord.split(\"\\n\");\n    const encodeList = [];\n    // シークレットモード\n    const mode = document.querySelector(\"#secret-mode\").value;\n    inputList.forEach((str) => {\n      let word = str;\n      // ひらがなをカタカナにする\n      word = hiraToKana(word);\n      // 濁音を「元文字+゛」の形にする\n      word = dakuonTransrator(word);\n      // 半濁音を「元文字+゜」の形にする\n      word = handakuonTransrator(word);\n      // 拗音(小さいヤユヨ)を元の文字にする\n      word = suteganaTransrator(word);\n\n      // モールス信号にする\n      encodeList.push(\n        morsify.encode(word, mode === \"メスガキ\" ? mesugakiProps : moresProps)\n      );\n    });\n    outputWord = encodeList.join(\"\\n\");\n\tcountWord(outputWord, \"output\")\n  }\n\n  // ひらがな -> カタカナ\n  function hiraToKana(str) {\n    return str.replace(/[\\u3041-\\u3096]/g, (match) => {\n      const chr = match.charCodeAt(0) + 0x60;\n      return String.fromCharCode(chr);\n    });\n  }\n\n  // 濁音（ガギグゲゴ、など）を文字と濁音記号に分離する\n  function dakuonTransrator(str) {\n    // unicodeでは「は、ば、ぱ」の並びになっているので-1すれば元の文字が得られる\n    return str.replace(\n      /[ガギグゲゴザジズゼゾダヂヅデドバビブベボ]/g,\n      (match) => {\n        const chr = match.charCodeAt(0) - 0x1;\n        return `${String.fromCharCode(chr)}゛`;\n      }\n    );\n  }\n\n  // 半濁音(パピプペポ)を文字と半濁音記号に分離する\n  function handakuonTransrator(str) {\n    return str.replace(/[パピプペポ]/g, (match) => {\n      const chr = match.charCodeAt(0) - 0x2;\n      return `${String.fromCharCode(chr)}゜`;\n    });\n  }\n\n  // 捨て仮名(ャュョなど小さい文字)を元の文字に戻す\n  function suteganaTransrator(str) {\n    return str.replace(/[ァィゥェォャュョッ]/g, (match) => {\n      const chr = match.charCodeAt(0) + 0x1;\n      return String.fromCharCode(chr);\n    });\n  }\n\n  // 漢字の検出\n  function detectKanji() {\n    const regexp = new RegExp(\n      /([\\u{3005}\\u{3007}\\u{303b}\\u{3400}-\\u{9FFF}\\u{F900}-\\u{FAFF}\\u{20000}-\\u{2FFFF}][\\u{E0100}-\\u{E01EF}\\u{FE00}-\\u{FE02}]?)/mu\n    );\n    return regexp.test(inputWord);\n  }\n\n  // デコード\n  function decode() {\n    const inputList = inputWord.split(\"\\n\");\n    const dencodeList = [];\n    // シークレットモード\n    const mode = document.querySelector(\"#secret-mode\").value;\n    inputList.forEach((str) => {\n      dencodeList.push(\n        morsify.decode(str, mode === \"メスガキ\" ? mesugakiProps : moresProps)\n      );\n    });\n    outputWord = dencodeList.join(\"\\n\");\n\tcountWord(outputWord, \"output\")\n  }\n\n  function countWord(word, inputFrom) {\n    if (inputFrom === \"input\") {\n      inputWordCount = word.length;\n    } else {\n      outputWordCount = word.length;\n    }\n  }\n</script>\n\n<header style=\"text-align:center;\">\n  <h1>ちんちんもーるす</h1>\n</header>\n<main>\n  <div>\n    <h4>ひらがなとカタカナをモールス信号に変えるよ！</h4>\n    <p>もはやモールスというか換字式暗号みたくなってるけどツッコまないでね！</p>\n    <p>えんこーど: ぶんしょう → ちんちん...</p>\n    <p>でこーど: ちんちん... → ぶんしょう</p>\n  </div>\n  <div>\n    <h3>にゅうりょく</h3>\n    <div>文字数: {inputWordCount}</div>\n    <textarea\n      name=\"input-kana\"\n      id=\"input-kana\"\n      cols=\"30\"\n      rows=\"10\"\n      on:input={(evt) => countWord(evt.target.value, \"input\")}\n      bind:value={inputWord}\n    />\n  </div>\n\n  <div style=\"display:flex; justify-content:center;\">\n    <button on:click={encode} style=\"margin:0 10px\">えんこーど</button>\n    <button on:click={decode} style=\"margin:0 10px\">でこーど</button>\n  </div>\n\n  <div>\n    <h3>しゅつりょく</h3>\n    <div>文字数: {outputWordCount}</div>\n    <textarea\n      name=\"output-chin\"\n      id=\"output-chin\"\n      cols=\"30\"\n      rows=\"10\"\n      bind:value={outputWord}\n      readonly\n    />\n  </div>\n  <p>遊びでひみつのモード仕込んでみたよ！さがしてみてね！</p>\n  <a href=\"https://github.com/takuya115/ChinChinMorse\">コードはこちら</a>\n</main>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 500px;\n    margin: 0 auto;\n  }\n\n  textarea {\n    resize: none;\n    width: 500px;\n  }\n\n  @media (min-width: 640px) {\n    main,\n    header {\n      max-width: none;\n    }\n  }\n\n  @media (max-width: 500px) {\n    textarea {\n      width: 100%;\n    }\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AA+JE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,AACd,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,mBAAI,CACJ,MAAM,eAAC,CAAC,AACN,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,IAAI,AACb,CAAC,AACH,CAAC"
}